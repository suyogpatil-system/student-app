---
apiVersion: v1
kind: Namespace
metadata:
  name: student-api-ns
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: application-configmap
  namespace: student-api-ns
data:
  DB_NAME: studentdb
  DB_USERNAME: studentuser
  DB_HOST: mysql-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: application
  name: application-deployment
  namespace: student-api-ns
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: application
  template:
    metadata:
      labels:
        app: application
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: type
                operator: In
                values:
                - application
      volumes:
        - name: sql-file-volume
          configMap:
            name: sql-file
      initContainers:
        - name: init-check-mysql
          image: mysql:latest
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: application-configmap
                  key: DB_HOST
            - name: DB_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: application-configmap
                  key: DB_USERNAME
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: DB_PASSWORD
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Starting data migration...";
              until mysql -h $DB_HOST -u$DB_USERNAME -p$DB_PASSWORD -e "SELECT 1"; do
                echo "Waiting for MySQL to be ready...";
                sleep 5;
              done;
              mysql -h $DB_HOST -u$DB_USERNAME -p$DB_PASSWORD < /mnt/sql/mysql.sql;
              echo "Data migration completed.";
          volumeMounts:
            - name: sql-file-volume
              mountPath: /mnt/sql/mysql.sql
              subPath: mysql.sql

      containers:
      - image: suyogpatil/student-app:v2
        name: application
        ports:
        - containerPort: 8282
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: application-configmap
              key: DB_HOST
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: application-configmap
              key: DB_NAME
        - name: DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: application-configmap
              key: DB_USERNAME
        - name: DB_URL
          value: jdbc:mysql://$(DB_HOST):3306/$(DB_NAME)
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: DB_PASSWORD

---
apiVersion: v1
kind: Service
metadata:
  name: application-service
  namespace: student-api-ns
spec:
  selector:
    app: application
  ports:
  - protocol: TCP
    port: 8282
    targetPort: 8282
    nodePort: 30007
  type: NodePort
